// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema_Vendas.API.Data;

namespace Sistema_Vendas.API.Migrations
{
    [DbContext(typeof(VendasContext))]
    [Migration("20220214005628_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("Sistema_Vendas.API.Models.Carro", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Combustivel")
                        .HasColumnType("longtext");

                    b.Property<string>("Cor")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Data_Anuncio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Itens")
                        .HasColumnType("longtext");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Motor")
                        .HasColumnType("longtext");

                    b.Property<int>("Quilometragem")
                        .HasColumnType("int");

                    b.Property<bool>("Troca")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId1")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("float");

                    b.HasKey("UsuarioId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UsuarioId1");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.Endereco", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .HasColumnType("longtext");

                    b.HasKey("UsuarioId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.Motocicleta", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("Cilindradas")
                        .HasColumnType("int");

                    b.Property<string>("Combustivel")
                        .HasColumnType("longtext");

                    b.Property<string>("Cor")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Data_Anuncio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Itens")
                        .HasColumnType("longtext");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<int>("Marchas")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Motor")
                        .HasColumnType("longtext");

                    b.Property<string>("Partida")
                        .HasColumnType("longtext");

                    b.Property<int>("Quilometragem")
                        .HasColumnType("int");

                    b.Property<bool>("Troca")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId1")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("float");

                    b.HasKey("UsuarioId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UsuarioId1");

                    b.ToTable("Motocicletas");
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.SubCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("SubNome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("SubCategorias");
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataIni")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("longtext");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.Carro", b =>
                {
                    b.HasOne("Sistema_Vendas.API.Models.Categoria", null)
                        .WithMany("Carros")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Sistema_Vendas.API.Models.Usuario", null)
                        .WithMany("Carros")
                        .HasForeignKey("UsuarioId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.Endereco", b =>
                {
                    b.HasOne("Sistema_Vendas.API.Models.Usuario", null)
                        .WithOne("Endereco")
                        .HasForeignKey("Sistema_Vendas.API.Models.Endereco", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.Motocicleta", b =>
                {
                    b.HasOne("Sistema_Vendas.API.Models.Categoria", null)
                        .WithMany("Motocicletas")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Sistema_Vendas.API.Models.Usuario", null)
                        .WithMany("Motocicletas")
                        .HasForeignKey("UsuarioId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.SubCategoria", b =>
                {
                    b.HasOne("Sistema_Vendas.API.Models.Categoria", "Categoria")
                        .WithMany("SubCategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.Categoria", b =>
                {
                    b.Navigation("Carros");

                    b.Navigation("Motocicletas");

                    b.Navigation("SubCategorias");
                });

            modelBuilder.Entity("Sistema_Vendas.API.Models.Usuario", b =>
                {
                    b.Navigation("Carros");

                    b.Navigation("Endereco");

                    b.Navigation("Motocicletas");
                });
#pragma warning restore 612, 618
        }
    }
}
